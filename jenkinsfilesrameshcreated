node('nodes'){

try{

  def mavenHome = tool name: 'maven3.8.5'
  echo "The job.name is: ${env.JOB_NAME}"
  echo "The Build number is: ${env.BUILD_NUMBER}"
  echo "The node name is : ${env.NODE_NAME}"

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * * ')])])

//checkout Code State
stage('checkoutcode'){
git branch: 'development', credentialsId: 'a1582d99-9f78-40ff-bdf9-a616ccd1c6d9', url: 'https://github.com/rameshm5612/maven-web-application.git'

}

//Build
stage('Build'){
sh "${mavenHome}/bin/mvn clean package"
}

//Excute SonarQube Repoprt
stage('ExcuteSonarQubeReport'){
sh "${mavenHome}/bin/mvn sonar:sonar"
}

//UploadArtifacts Into Nexus
stage('UploadArtifactsIntoNexus'){
sh "${mavenHome}/bin/mvn deploy"
}
}//try closeing
catch(e){
currentBuild.result = "FAILURE"
}
finally{
sendSlackNotificatiopns(currentBuild.result)
}
}//node closeing

//Function for slackNotifications

def sendSlackNotificatiopns(String buildStatus = 'STARTED') {
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}



